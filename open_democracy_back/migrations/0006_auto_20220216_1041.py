# Generated by Django 3.2.11 on 2022-02-16 10:41

import _operator
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('open_democracy_back', '0005_alter_questionfilter_conditional_question'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionFilterBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('conditional_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_that_depend_on_me', to='open_democracy_back.question', verbose_name='Filtre par question')),
                ('question', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_filters', to='open_democracy_back.question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionFilterBoolean',
            fields=[
                ('questionfilterbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='open_democracy_back.questionfilterbase')),
                ('response', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=('open_democracy_back.questionfilterbase',),
        ),
        migrations.CreateModel(
            name='QuestionFilterNumericalOrScale',
            fields=[
                ('questionfilterbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='open_democracy_back.questionfilterbase')),
                ('first_operator', models.CharField(choices=[(_operator.lt, '<'), (_operator.gt, '>'), (_operator.le, '<='), (_operator.ge, '>='), (_operator.ne, '!='), (_operator.eq, '=')], max_length=8)),
                ('first_value', models.IntegerField()),
                ('intersection_operator', models.CharField(choices=[('and', 'et'), ('or', 'ou'), ('not', 'non')], max_length=8)),
                ('second_operator', models.CharField(choices=[(_operator.lt, '<'), (_operator.gt, '>'), (_operator.le, '<='), (_operator.ge, '>='), (_operator.ne, '!='), (_operator.eq, '=')], max_length=8)),
                ('second_value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('open_democracy_back.questionfilterbase',),
        ),
        migrations.CreateModel(
            name='QuestionFilterResponseChoices',
            fields=[
                ('questionfilterbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='open_democracy_back.questionfilterbase')),
                ('intersection_operator', models.CharField(choices=[('and', 'et'), ('or', 'ou'), ('not', 'non')], max_length=8)),
                ('response', models.ManyToManyField(to='open_democracy_back.ResponseChoice')),
            ],
            options={
                'abstract': False,
            },
            bases=('open_democracy_back.questionfilterbase',),
        ),
        migrations.DeleteModel(
            name='QuestionFilter',
        ),
    ]
