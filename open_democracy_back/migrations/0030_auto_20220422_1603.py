# Generated by Django 3.2.11 on 2022-04-22 16:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
        ('open_democracy_back', '0029_auto_20220413_1558'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationInitPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', wagtail.core.fields.RichTextField(default='', help_text="Expliquer qu'aucune évaluation n'existe dans cette localité là, que des questions sur la vie politique de la ville précise seront posées, qu'il faut être connecté pour pouvoir initer une évaluation etc", verbose_name="Explication de l'initialisation")),
                ('public_name_question', models.TextField(default='', help_text="Question RGPD - La réponse est oui / non - Si l'évaluation est faite au nom d'une association alors c'est le nom de cette association qui sera affichée", verbose_name="Enoncé de la question sur la publication ou non du nom de l'initateur")),
                ('public_name_question_description', models.TextField(default='', help_text="Expliciter à l'utilisateur ce qu'implique ou non d'autoriser à publier son nom", verbose_name="Description de la question sur la publication ou non du nom de l'initateur")),
                ('representativity_title', models.TextField(default='', help_text="Correspond à la partie où seront posées les questions sur les seuils d'acceptabilité de la représentativité", verbose_name="Titre pour les questions sur les seuils d'acceptabilité de la représentativité")),
                ('representativity_description', wagtail.core.fields.RichTextField(default='', help_text='Permet à la personne de mieux comprendre les questions sur les représentativités, et lui donne des éléments de réponse', verbose_name='Description de la question sur la limite de représentativité')),
                ('initialization_validation', wagtail.core.fields.RichTextField(default='', help_text="S'affichera une fois l'initialisation de l'évaluation terminée", verbose_name="Texte de validation de l'initialisation d'une évaluation")),
            ],
            options={
                'verbose_name': "Initialisation d'une évaluation",
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RenameField(
            model_name='assessment',
            old_name='initiated_by',
            new_name='initiated_by_user',
        ),
        migrations.RemoveField(
            model_name='assessment',
            name='carried_by',
        ),
        migrations.RemoveField(
            model_name='assessment',
            name='is_carried_by_locality',
        ),
        migrations.RemoveField(
            model_name='assessment',
            name='is_initiated_by_locality',
        ),
        migrations.AddField(
            model_name='assessment',
            name='initialized_to_the_name_of',
            field=models.CharField(blank=True, help_text="Utile quand l'évaluation n'est pas initialisé par la collectivité", max_length=255, null=True, verbose_name='Initialisé au nom de'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='initiator_type',
            field=models.CharField(blank=True, choices=[('collectivity', 'La collectivité'), ('association', 'Une association')], max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='assessment',
            name='public_initiator',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='representativitycriteria',
            name='min_rate',
            field=models.IntegerField(default=0, help_text='En dessous de ce taux (%) la publication des résultats est interdite', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Taux (en %) minimum acceptable pour la publication des résultats'),
        ),
        migrations.CreateModel(
            name='AssessmentRepresentativity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptability_threshold', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name="Seuil d'acceptabilité")),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='representativites', to='open_democracy_back.assessment')),
                ('representativity_criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='representativites', to='open_democracy_back.representativitycriteria')),
            ],
        ),
    ]
