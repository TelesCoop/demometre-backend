# Generated by Django 3.2.19 on 2023-09-04 07:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import modelcluster.fields
import wagtail.fields


def add_assessments_name(apps, schema):
    Assessment = apps.get_model("open_democracy_back", "Assessment")
    for assessment in Assessment.objects.all():
        if not assessment.name:
            if assessment.locality_type == 'municipality':
                assessment.name = assessment.municipality.name
            if assessment.locality_type == 'intercommunality':
                assessment.name = assessment.epci.name
            assessment.save()


class Migration(migrations.Migration):

    dependencies = [
        ("open_democracy_back", "0043_auto_20230713_1053"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="participation",
            name="is_current",
        ),
        migrations.AddField(
            model_name="assessment",
            name="calendar",
            field=wagtail.fields.RichTextField(
                blank=True, default="", verbose_name="calendrier"
            ),
        ),
        migrations.AddField(
            model_name="assessment",
            name="context",
            field=wagtail.fields.RichTextField(
                blank=True, default="", verbose_name="contexte"
            ),
        ),
        migrations.AddField(
            model_name="assessment",
            name="name",
            field=models.CharField(
                blank=True, max_length=80, null=True, verbose_name="nom"
            ),
        ),
        migrations.AddField(
            model_name="assessment",
            name="objectives",
            field=wagtail.fields.RichTextField(
                blank=True, default="", verbose_name="objectifs"
            ),
        ),
        migrations.AddField(
            model_name="assessment",
            name="stakeholders",
            field=wagtail.fields.RichTextField(
                blank=True, default="", verbose_name="parties prenantes"
            ),
        ),
        migrations.AlterField(
            model_name="assessment",
            name="epci",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="open_democracy_back.epci",
                unique=True,
                verbose_name="Intercommunalité",
            ),
        ),
        migrations.AlterField(
            model_name="assessment",
            name="municipality",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="open_democracy_back.municipality",
                unique=True,
                verbose_name="Commune",
            ),
        ),
        migrations.CreateModel(
            name="AssessmentDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("assessment_reports", "Rapports d'évaluation"),
                            ("other", "Autres documents"),
                            ("invoices", "Factures"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file", models.FileField(upload_to="")),
                ("name", models.CharField(max_length=80)),
                (
                    "assessment",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="open_democracy_back.assessment",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(add_assessments_name, migrations.RunPython.noop),
    ]
