# Generated by Django 3.2.11 on 2022-02-11 16:29

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import modelcluster.fields
import uuid
import wagtail.core.fields
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('order', models.IntegerField(help_text='Place que doit occuper ce critère dans son marqueur', verbose_name='N°')),
                ('name', models.CharField(max_length=125, verbose_name='Nom')),
                ('code', models.CharField(help_text='Correspond au numéro (ou lettre) de ce critère dans son marqueur', max_length=2, verbose_name='Code')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Critère',
                'verbose_name_plural': 'Critères',
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('tagline', models.CharField(default='', max_length=127)),
                ('body', wagtail.core.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Marker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=125, verbose_name='Nom')),
                ('code', models.CharField(help_text='Correspond au numéro (ou lettre) de ce marqueur dans son pilier', max_length=2, verbose_name='Code')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Marqueur',
                'verbose_name_plural': 'Marqueurs',
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('code', models.CharField(help_text='Correspond au numéro (ou lettre) de cette question dans son critère', max_length=2, verbose_name='Code')),
                ('title', models.CharField(default='', max_length=125)),
                ('question', models.TextField(default='')),
                ('objectivity', models.CharField(choices=[('objective', 'Objective'), ('subjective', 'Subjective')], default='subjective', max_length=32)),
                ('method', models.CharField(blank=True, choices=[('quantitative', 'Quantitative'), ('qualitative', 'Qualitative')], max_length=32)),
                ('type', models.CharField(choices=[('open', 'Ouverte'), ('unique_choice', 'Choix unique'), ('multiple_choice', 'Choix multiple'), ('closed_with_ranking', 'Fermée avec classement'), ('closed_with_scale', 'Fermée à échelle'), ('boolean', 'Binaire oui / non'), ('numerical', 'Numérique')], default='open', help_text='Choisir le type de question', max_length=32)),
                ('min', models.IntegerField(blank=True, null=True, verbose_name='Valeur minimale')),
                ('max', models.IntegerField(blank=True, null=True, verbose_name='Valeur maximale')),
                ('criteria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='open_democracy_back.criteria')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['code'],
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=125, verbose_name='Nom')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Rôle',
                'verbose_name_plural': 'Rôles',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='ResponseChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('response_choice', models.CharField(default='', max_length=510, verbose_name='Réponse possible')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('question', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_choices', to='open_democracy_back.question')),
            ],
            options={
                'verbose_name': 'Choix de réponse',
                'verbose_name_plural': 'Choix de réponse',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='QuestionFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('conditional_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='open_democracy_back.question', verbose_name='Filtre par question')),
                ('question', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_filters', to='open_democracy_back.question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='open_democracy_back.responsechoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pillar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=125, verbose_name='Nom')),
                ('code', models.CharField(help_text='Correspond au numéro (ou lettre) de ce pilier', max_length=2, verbose_name='Code')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Marqueur',
                'verbose_name_plural': 'Marqueurs',
                'ordering': ['code'],
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='MarkerOrderByRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('marker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='open_democracy_back.marker')),
                ('role', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_markers_ordered', to='open_democracy_back.role')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='marker',
            name='pillar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='open_democracy_back.pillar'),
        ),
        migrations.AddField(
            model_name='criteria',
            name='marker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='open_democracy_back.marker'),
        ),
        migrations.AlterUniqueTogether(
            name='marker',
            unique_together={('translation_key', 'locale')},
        ),
        migrations.AlterUniqueTogether(
            name='criteria',
            unique_together={('translation_key', 'locale')},
        ),
    ]
