# Generated by Django 3.2.11 on 2022-06-07 18:03

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


def create_assessment_types(apps, _):
    AssessmentType = apps.get_model("open_democracy_back", "AssessmentType")
    for assessment_type, name in [
        ("quick", "Diagnostic rapide"),
        ("participative", "Evaluation participative"),
        ("with_expert", "Evaluation avec experts"),
    ]:
        AssessmentType.objects.create(assessment_type=assessment_type, name=name)


def remove_assessment_types(apps, _):
    AssessmentType = apps.get_model("open_democracy_back", "AssessmentType")
    AssessmentType.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailimages", "0023_add_choose_permissions"),
        ("wagtailcore", "0066_collection_management_permissions"),
        ("open_democracy_back", "0042_auto_20220609_0825"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssessmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assessment_type",
                    models.CharField(
                        choices=[
                            ("quick", "Diagnostic rapide"),
                            ("participative", "Evaluation participative"),
                            ("with_expert", "Evaluation avec experts"),
                        ],
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
            ],
            options={
                "verbose_name": "Type d'évaluation",
                "verbose_name_plural": "Types d'évaluation",
            },
        ),
        migrations.RenameField(
            model_name="assessment",
            old_name="type",
            new_name="locality_type",
        ),
        migrations.AlterField(
            model_name="assessment",
            name="locality_type",
            field=models.CharField(
                choices=[
                    ("municipality", "Commune"),
                    ("intercommunality", "Intercommunalité"),
                ],
                default="municipality",
                max_length=32,
                verbose_name="Type de localité",
            ),
        ),
        migrations.CreateModel(
            name="UsagePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "tag_line",
                    models.CharField(
                        default="", max_length=510, verbose_name="Phrase d'accroche"
                    ),
                ),
                (
                    "introduction",
                    wagtail.core.fields.RichTextField(
                        default="", verbose_name="Introduction"
                    ),
                ),
                (
                    "step_of_use_title",
                    models.CharField(
                        blank=True,
                        help_text="Si ce champ est vide les étapes d'utilisation du DémoMètre ne s'afficheront pas",
                        max_length=68,
                        verbose_name="Titre du bloc retours d'expérience",
                    ),
                ),
                (
                    "step_of_use_intro",
                    models.CharField(
                        blank=True,
                        max_length=510,
                        verbose_name="Intro du bloc retours d'expérience",
                    ),
                ),
                (
                    "steps_of_use",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "step",
                                wagtail.core.blocks.ListBlock(
                                    wagtail.core.blocks.StructBlock(
                                        [
                                            (
                                                "image",
                                                wagtail.images.blocks.ImageChooserBlock(
                                                    label="Image"
                                                ),
                                            ),
                                            (
                                                "title",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Titre"
                                                ),
                                            ),
                                            (
                                                "description",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Description"
                                                ),
                                            ),
                                        ]
                                    ),
                                    label="Etape",
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Etapes d'utilisation",
                    ),
                ),
                (
                    "participate_block_title",
                    models.CharField(
                        blank=True,
                        help_text="Si ce champ est vide les étapes d'utilisation du DémoMètre ne s'afficheront pas",
                        max_length=68,
                        verbose_name="Titre du bloc retours d'expérience",
                    ),
                ),
                (
                    "participate_block_intro",
                    models.CharField(
                        blank=True,
                        max_length=510,
                        verbose_name="Intro du bloc retours d'expérience",
                    ),
                ),
                (
                    "participate_left_paragraph",
                    wagtail.core.fields.RichTextField(
                        default="", verbose_name="Paragraphe de gauche"
                    ),
                ),
                (
                    "participate_right_paragraph",
                    wagtail.core.fields.RichTextField(
                        default="", verbose_name="Paragraphe de droite"
                    ),
                ),
                (
                    "start_assessment_block_title",
                    models.CharField(
                        blank=True,
                        help_text="Si ce champ est vide les étapes d'utilisation du DémoMètre ne s'afficheront pas",
                        max_length=68,
                        verbose_name="Titre du bloc retours d'expérience",
                    ),
                ),
                (
                    "start_assessment_block_intro",
                    models.CharField(
                        blank=True,
                        max_length=510,
                        verbose_name="Intro du bloc retours d'expérience",
                    ),
                ),
                (
                    "start_processes",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "assessment_type",
                                wagtail.core.blocks.ListBlock(
                                    wagtail.core.blocks.StructBlock(
                                        [
                                            (
                                                "title",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Titre"
                                                ),
                                            ),
                                            (
                                                "type",
                                                wagtail.core.blocks.ChoiceBlock(
                                                    choices=[
                                                        ("quick", "Diagnostic rapide"),
                                                        (
                                                            "participative",
                                                            "Evaluation participative",
                                                        ),
                                                        (
                                                            "with_expert",
                                                            "Evaluation avec experts",
                                                        ),
                                                    ],
                                                    label="Type",
                                                ),
                                            ),
                                            (
                                                "who",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Qui"
                                                ),
                                            ),
                                            (
                                                "what",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Quoi"
                                                ),
                                            ),
                                            (
                                                "how",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Comment"
                                                ),
                                            ),
                                            (
                                                "results",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Resultats"
                                                ),
                                            ),
                                            (
                                                "price",
                                                wagtail.core.blocks.CharBlock(
                                                    label="Prix"
                                                ),
                                            ),
                                            (
                                                "pdf",
                                                wagtail.documents.blocks.DocumentChooserBlock(
                                                    label="Pdf du questionnaire"
                                                ),
                                            ),
                                        ]
                                    ),
                                    label="Type d'évaluation",
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Descriptif des différents types d'évaluation",
                    ),
                ),
                (
                    "intro_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page des utilisations possibles",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.AddField(
            model_name="assessment",
            name="assessment_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="open_democracy_back.assessmenttype",
                verbose_name="Type d'évaluation",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="assessment_types",
            field=models.ManyToManyField(
                blank=True,
                related_name="questions",
                to="open_democracy_back.AssessmentType",
                verbose_name="Types d'évaluation concernés",
            ),
        ),
        migrations.RunPython(create_assessment_types, remove_assessment_types),
    ]
